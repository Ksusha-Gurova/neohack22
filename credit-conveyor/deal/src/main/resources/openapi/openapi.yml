openapi: "3.0.0"
info:
  version: 1.0.0
  title: Deal
servers:
  - url: localhost:8081
paths:
  /deal/application:
    post:
      tags:
        - deal
      summary: расчет возможных условий кредита
      operationId: calculateCreditOffers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoanApplicationRequestDTO"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LoanOfferDTO"

  /deal/offer:
    put:
      tags:
        - deal
      summary: выбор одного из предложений
      operationId: applyOffer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoanOfferDTO"
      responses:
        200:
          description: OK

  /deal/calculate/{applicationId}:
    put:
      tags:
        - deal
      summary: завершение регистрации + полный подсчёт кредита
      operationId: calculateCredit
      parameters:
        - name: applicationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FinishRegistrationRequestDTO"
      responses:
        200:
          description: OK

  /deal/document/{applicationId}/send:
    post:
      tags:
        - deal
      summary: запрос на отправку документов
      operationId: sendDocuments
      parameters:
        - name: applicationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK

  /deal/document/{applicationId}/sign:
    post:
      tags:
        - deal
      summary: запрос на подписание документов
      operationId: signDocuments
      parameters:
        - name: applicationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK

  /deal/document/{applicationId}/code:
    post:
      tags:
        - deal
      summary: подписание документов
      operationId: signDocumentsSesCode
      parameters:
        - name: applicationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          text/plain:
            schema:
              type: string
      responses:
        200:
          description: OK

  /deal/admin/application/{applicationId}:
    get:
      tags:
        - deal
      summary: получить заявку по id
      operationId: getApplication
      parameters:
        - name: applicationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationDTO"

  /deal/admin/application/{applicationId}/status:
    put:
      tags:
        - deal
      summary: изменить статус заявки
      operationId: updateStatus
      parameters:
        - name: applicationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          text/plain:
            schema:
              type: string
      responses:
        200:
          description: OK

  /deal/admin/application:
    get:
      tags:
        - deal
      summary: получить все заявки
      operationId: getAllApplication
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApplicationDTO"


components:
  schemas:
    ApplicationDTO:
      type: object
      required:
        - firstName
        - lastName
        - email
        - birthdate
        - passportSeries
        - passportNumber
        - passportIssueDate
        - passportIssueBranch
        - gender
        - maritalStatus
        - dependentAmount
        - employment
        - account
        - amount
        - term
        - monthlyPayment
        - rate
        - psk
        - isInsuranceEnabled
        - isSalaryClient
        - paymentSchedule
        - employmentStatus
        - employerINN
        - salary
        - workExperienceTotal
        - workExperienceCurrent
        - status
        - creationDate
        - appliedOffer
        - signDate
        - sesCode
        - statusHistory
      properties:
        firstName:
          type: string
          minLength: 2
          maxLength: 30
          pattern: ^[a-zA-Z]+$
        lastName:
          type: string
          minLength: 2
          maxLength: 30
          pattern: ^[a-zA-Z]+$
        middleName:
          type: string
          minLength: 2
          maxLength: 30
          pattern: ^[a-zA-Z]+$
        email:
          type: string
          pattern: ^[\w\.]{2,50}@[\w\.]{2,20}
        birthdate:
          type: string
          format: date
        passportSeries:
          type: string
          minLength: 4
          maxLength: 4
          pattern: ^[0-9]+$
        passportNumber:
          type: string
          minLength: 6
          maxLength: 6
          pattern: ^[0-9]+$
        passportIssueDate:
          type: string
          format: date
        passportIssueBranch:
          type: string
        gender:
          type: string
        maritalStatus:
          type: string
        dependentAmount:
          type: integer
        employmentStatus:
          type: string
        employerINN:
          type: string
        salary:
          type: number
        position:
          type: string
        workExperienceTotal:
          type: integer
        workExperienceCurrent:
          type: integer
        account:
          type: string
        amount:
          type: number
        term:
          type: integer
        monthlyPayment:
          type: number
        rate:
          type: number
        psk:
          type: number
        isInsuranceEnabled:
          type: boolean
        isSalaryClient:
          type: boolean
        paymentSchedule:
          type: array
          items:
            $ref: "#/components/schemas/PaymentScheduleElement"
        status:
          type: string
        creationDate:
          type: string
          format: date
        appliedOffer:
          $ref: "#/components/schemas/LoanOfferDTO"
        signDate:
          type: string
          format: date
        sesCode:
          type: string
        statusHistory:
          type: array
          items:
            $ref: "#/components/schemas/ApplicationStatusHistoryDTO"

    LoanApplicationRequestDTO:
      type: object
      required:
        - amount
        - term
        - firstName
        - lastName
        - email
        - birthdate
        - passportSeries
        - passportNumber
      properties:
        amount:
          type: number
          minimum: 10000
        term:
          type: integer
          minimum: 6
        firstName:
          type: string
          minLength: 2
          maxLength: 30
          pattern: ^[a-zA-Z]+$
        lastName:
          type: string
          minLength: 2
          maxLength: 30
          pattern: ^[a-zA-Z]+$
        middleName:
          type: string
          minLength: 2
          maxLength: 30
          pattern: ^[a-zA-Z]+$
        email:
          type: string
          pattern: ^[\w\.]{2,50}@[\w\.]{2,20}
        birthdate:
          type: string
          format: date
        passportSeries:
          type: string
          minLength: 4
          maxLength: 4
          pattern: ^[0-9]+$
        passportNumber:
          type: string
          minLength: 6
          maxLength: 6
          pattern: ^[0-9]+$

    LoanOfferDTO:
      type: object
      required:
        - applicationId
        - requestedAmount
        - totalAmount
        - term
        - monthlyPayment
        - rate
        - isInsuranceEnabled
        - isSalaryClient
      properties:
        applicationId:
          type: integer
          format: int64
        requestedAmount:
          type: number
        totalAmount:
          type: number
        term:
          type: integer
        monthlyPayment:
          type: number
        rate:
          type: number
        isInsuranceEnabled:
          type: boolean
        isSalaryClient:
          type: boolean

    ScoringDataDTO:
      type: object
      required:
        - amount
        - term
        - gender
        - passportIssueDate
        - passportIssueBranch
        - maritalStatus
        - dependentAmount
        - employment
        - account
        - isInsuranceEnabled
        - isSalaryClient
      properties:
        amount:
          type: number
          minimum: 10000
        term:
          type: integer
          minimum: 6
        firstName:
          type: string
          minLength: 2
          maxLength: 30
          pattern: ^[a-zA-Z]+$
        lastName:
          type: string
          minLength: 2
          maxLength: 30
          pattern: ^[a-zA-Z]+$
        middleName:
          type: string
          minLength: 2
          maxLength: 30
          pattern: ^[a-zA-Z]+$
        gender:
          $ref: "#/components/schemas/Gender"
        birthdate:
          type: string
          format: date
        passportSeries:
          type: string
          minLength: 4
          maxLength: 4
          pattern: ^[0-9]+$
        passportNumber:
          type: string
          minLength: 6
          maxLength: 6
          pattern: ^[0-9]+$
        passportIssueDate:
          type: string
          format: date
        passportIssueBranch:
          type: string
        maritalStatus:
          $ref: "#/components/schemas/MaritalStatus"
        dependentAmount:
          type: integer
        employment:
          $ref: "#/components/schemas/EmploymentDTO"
        account:
          type: string
        isInsuranceEnabled:
          type: boolean
        isSalaryClient:
          type: boolean

    CreditDTO:
      type: object
      required:
        - amount
        - term
        - monthlyPayment
        - rate
        - psk
        - isInsuranceEnabled
        - isSalaryClient
        - paymentSchedule
      properties:
        amount:
          type: number
        term:
          type: integer
        monthlyPayment:
          type: number
        rate:
          type: number
        psk:
          type: number
        isInsuranceEnabled:
          type: boolean
        isSalaryClient:
          type: boolean
        paymentSchedule:
          type: array
          items:
            $ref: "#/components/schemas/PaymentScheduleElement"

    EmploymentDTO:
      type: object
      required:
        - employmentStatus
        - employerINN
        - salary
        - workExperienceTotal
        - workExperienceCurrent
      properties:
        employmentStatus:
          $ref: "#/components/schemas/EmploymentStatus"
        employerINN:
          type: string
        salary:
          type: number
        position:
          $ref: "#/components/schemas/Position"
        workExperienceTotal:
          type: integer
        workExperienceCurrent:
          type: integer

    PaymentScheduleElement:
      type: object
      required:
        - number
        - date
        - totalPayment
        - interestPayment
        - debtPayment
        - remainingDebt
      properties:
        number:
          type: integer
        date:
          type: string
          format: date
        totalPayment:
          type: number
        interestPayment:
          type: number
        debtPayment:
          type: number
        remainingDebt:
          type: number

    ApplicationStatusHistoryDTO:
      type: object
      required:
        - status
        - time
        - changeType
      properties:
        status:
          $ref: "#/components/schemas/ApplicationStatus"
        time:
          type: string
          format: date-time
        changeType:
          $ref: "#/components/schemas/ChangeType"

    FinishRegistrationRequestDTO:
      type: object
      required:
        - gender
        - maritalStatus
        - dependentAmount
        - passportIssueDate
        - passportIssueBranch
        - employment
        - account
      properties:
        gender:
          $ref: "#/components/schemas/Gender"
        maritalStatus:
          $ref: "#/components/schemas/MaritalStatus"
        dependentAmount:
          type: integer
        passportIssueDate:
          type: string
          format: date
        passportIssueBranch:
          type: string
        employment:
          $ref: "#/components/schemas/EmploymentDTO"
        account:
          type: string

    Gender:
      type: string
      enum:
        - male
        - female
        - non_binary

    MaritalStatus:
      type: string
      enum:
        - married
        - divorced
        - single
        - widow_widower

    EmploymentStatus:
      type: string
      enum:
        - unemployed
        - self_employed
        - employed
        - business_owner

    Position:
      type: string
      enum:
        - worker
        - mid_manager
        - top_manager
        - owner

    ApplicationStatus:
      type: string
      enum:
        - preapproval
        - approved
        - cc_denied
        - cc_approved
        - prepare_documents
        - document_created
        - client_denied
        - document_signed
        - credit_issued

    CreditStatus:
      type: string
      enum:
        - calculated
        - issued

    ChangeType:
      type: string
      enum:
        - automatic
        - manual
